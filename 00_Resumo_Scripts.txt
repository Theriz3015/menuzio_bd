
# üìÑ Documenta√ß√£o dos Scripts SQL ‚Äì Projeto Menuzio

---

## 1. `schema.sql` ‚Äì Estrutura do Banco

Este script cria toda a estrutura do banco de dados `menuzio_bd`, com as tabelas e relacionamentos principais do sistema Menuzio:

### Tabelas Criadas:
- `cliente`: cadastro de clientes
- `usuario`: funcion√°rios/admins do sistema
- `produto`: itens do card√°pio (ex: pizzas, bebidas)
- `estoque`: controle de quantidade dos produtos
- `pedido`: pedidos realizados por clientes
- `item_pedido`: itens individuais de cada pedido

### Caracter√≠sticas:
- Chaves prim√°rias `AUTO_INCREMENT`
- Chaves estrangeiras com `ON DELETE CASCADE` onde necess√°rio
- Tipos ENUM para campos como `status` e `tipo`

---

## 2. `seed_dados_exemplo.sql` ‚Äì Inser√ß√£o de Dados B√°sicos

Este script insere dados m√≠nimos para testes autom√°ticos, usando `SELECT ... WHERE NOT EXISTS` para evitar duplicatas.

### Dados inclu√≠dos:
- Cliente de exemplo: Jo√£o da Silva
- Usu√°rio admin com e-mail e senha padr√£o
- Produtos como Pizza Calabresa e Suco de Laranja
- Estoque de 20 unidades para cada produto

### Fun√ß√£o:
Permite testar as transa√ß√µes e consultas sem precisar inserir tudo manualmente.

---

## 3. `02_Consultas_DQL.sql` ‚Äì Consultas de Leitura

Cont√©m 5 consultas SQL para an√°lise de dados do sistema:

1. **Total de pedidos por cliente**  
2. **Produtos da categoria 'Pizza'**  
3. **Produtos com estoque abaixo de 10 unidades**  
4. **Total monet√°rio por pedido**  
5. **Top 3 produtos mais vendidos**

As consultas utilizam `JOIN`, `GROUP BY`, `ORDER BY` e fun√ß√µes agregadas como `SUM` e `COUNT`.

---

## 4. `03_Transacoes_DTL.sql` ‚Äì Transa√ß√µes com Controle

Script que simula 3 transa√ß√µes reais com `START TRANSACTION`, `SAVEPOINT`, `COMMIT` e `ROLLBACK`:

1. **Cria√ß√£o de um pedido completo**, com inser√ß√£o de itens e atualiza√ß√£o do estoque.
2. **Cancelamento de pedido**, com restaura√ß√£o de estoque e remo√ß√£o segura do pedido.
3. **Reposi√ß√£o manual de estoque**, com rollback opcional para simula√ß√£o de erro.

### Objetivo:
Demonstrar seguran√ßa e consist√™ncia nas altera√ß√µes do banco, respeitando integridade relacional.

---

## Observa√ß√£o Final

Esses 4 arquivos funcionam em conjunto:
- Primeiro, roda-se o `schema.sql` para estruturar
- Depois, o `seed_dados_exemplo.sql` para popular
- Em seguida, usa-se `Consultas_DQL` para ler
- E `Transacoes_DTL` para simular uso real e controle de erros

